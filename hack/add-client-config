#!/bin/bash
# add-client-config - Add a new client-specific thoughts configuration
# Usage: add-client-config <client-name> <thoughts-repo-path>
# Example: add-client-config acme ~/clients/acme/thoughts

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

CONFIG_DIR="$HOME/.config/humanlayer"

# Function to show usage
show_usage() {
    echo "Usage: add-client-config <client-name> [thoughts-repo-path]"
    echo ""
    echo "Examples:"
    echo "  add-client-config acme                    # Interactive - will prompt for path"
    echo "  add-client-config acme ~/clients/acme/thoughts"
    echo "  add-client-config brkthru ~/code-repos/github/brkthru/bravo_code/thoughts"
    echo ""
    echo "This creates a new HumanLayer configuration for a client project."
    echo "You can then switch to it with: hl-switch <client-name>"
}

# Check arguments
if [ $# -eq 0 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    show_usage
    exit 0
fi

CLIENT_NAME="$1"
THOUGHTS_REPO="${2:-}"

# Sanitize client name
CLIENT_NAME=$(echo "$CLIENT_NAME" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')

CONFIG_FILE="$CONFIG_DIR/config-${CLIENT_NAME}.json"

# Check if config already exists
if [ -f "$CONFIG_FILE" ]; then
    echo -e "${RED}Error: Configuration for '$CLIENT_NAME' already exists${NC}"
    echo "File: $CONFIG_FILE"
    echo ""
    echo "To update it, edit the file directly or remove it first:"
    echo "  rm $CONFIG_FILE"
    exit 1
fi

echo -e "${BLUE}ðŸ†• Adding new client configuration: $CLIENT_NAME${NC}"
echo ""

# Get thoughts repo path if not provided
if [ -z "$THOUGHTS_REPO" ]; then
    echo "Where should this client's thoughts be stored?"
    echo ""
    echo "Suggestions:"
    echo "  ~/thoughts-${CLIENT_NAME}"
    echo "  ~/clients/${CLIENT_NAME}/thoughts"
    echo "  ~/code-repos/github/${CLIENT_NAME}/thoughts"
    echo ""
    read -p "Thoughts repository path: " THOUGHTS_REPO

    if [ -z "$THOUGHTS_REPO" ]; then
        echo -e "${RED}Error: Path cannot be empty${NC}"
        exit 1
    fi
fi

# Expand tilde
THOUGHTS_REPO="${THOUGHTS_REPO/#\~/$HOME}"

# Convert to absolute path if relative
if [[ "$THOUGHTS_REPO" != /* ]]; then
    THOUGHTS_REPO="$(cd "$(dirname "$THOUGHTS_REPO")" 2>/dev/null && pwd)/$(basename "$THOUGHTS_REPO")" || THOUGHTS_REPO="$HOME/$THOUGHTS_REPO"
fi

echo ""
echo "Configuration details:"
echo "  Client: $CLIENT_NAME"
echo "  Thoughts repo: $THOUGHTS_REPO"
echo "  Config file: $CONFIG_FILE"
echo ""

read -p "Create this configuration? (Y/n) " -n 1 -r
echo

if [[ $REPLY =~ ^[Nn]$ ]]; then
    echo "Cancelled."
    exit 0
fi

# Create the config file
mkdir -p "$CONFIG_DIR"

cat > "$CONFIG_FILE" <<EOF
{
  "thoughts": {
    "thoughtsRepo": "$THOUGHTS_REPO",
    "reposDir": "repos",
    "globalDir": "global",
    "user": "ryan",
    "repoMappings": {}
  }
}
EOF

echo -e "${GREEN}âœ“ Created configuration: $CLIENT_NAME${NC}"
echo ""

# Ask if they want to initialize the thoughts repo
if [ ! -d "$THOUGHTS_REPO" ]; then
    echo "The thoughts repository doesn't exist yet."
    echo ""
    read -p "Create and initialize $THOUGHTS_REPO? (Y/n) " -n 1 -r
    echo

    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        echo ""
        echo "Creating thoughts repository..."

        mkdir -p "$THOUGHTS_REPO"
        cd "$THOUGHTS_REPO"

        # Create structure
        mkdir -p repos global/ryan global/shared

        # Create .gitignore
        cat > .gitignore <<'GITIGNORE'
# OS files
.DS_Store
Thumbs.db

# Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Temporary files
*.tmp
*.bak

# Searchable directory (generated)
**/searchable/
GITIGNORE

        # Create README
        cat > README.md <<README
# ${CLIENT_NAME^} Thoughts Repository

Thoughts repository for managing context across ${CLIENT_NAME} projects.

## Structure

\`\`\`
thoughts/
â”œâ”€â”€ repos/              # Project-specific thoughts
â”‚   â””â”€â”€ {project}/
â”‚       â”œâ”€â”€ ryan/      # Your personal notes
â”‚       â””â”€â”€ shared/    # Team-shared notes
â””â”€â”€ global/            # Cross-project thoughts
    â”œâ”€â”€ ryan/          # Your personal notes
    â””â”€â”€ shared/        # Team-shared notes
\`\`\`

## Usage

\`\`\`bash
# Switch to ${CLIENT_NAME} config
hl-switch ${CLIENT_NAME}

# Initialize a project
cd /path/to/project
humanlayer thoughts init
\`\`\`
README

        # Initialize git
        git init
        git add .
        git commit -m "Initial ${CLIENT_NAME} thoughts repository"

        echo -e "${GREEN}âœ“ Created and initialized: $THOUGHTS_REPO${NC}"
        echo ""

        # Ask about GitHub
        read -p "Push to GitHub? (y/N) " -n 1 -r
        echo

        if [[ $REPLY =~ ^[Yy]$ ]]; then
            echo ""
            echo "Enter GitHub repository (e.g., org-name/thoughts or just repo-name):"
            read -p "GitHub repo: " GITHUB_REPO

            if [ -n "$GITHUB_REPO" ]; then
                # Check if it includes org/repo or just repo
                if [[ "$GITHUB_REPO" != *"/"* ]]; then
                    # Just repo name, ask for org
                    echo ""
                    echo "GitHub organization/owner:"
                    echo "  1. Your personal account"
                    echo "  2. coalesce-labs"
                    echo "  3. Client organization"
                    echo ""
                    read -p "Enter org name: " ORG_NAME
                    GITHUB_REPO="${ORG_NAME}/${GITHUB_REPO}"
                fi

                echo ""
                echo "Creating GitHub repository: $GITHUB_REPO"
                gh repo create "$GITHUB_REPO" \
                    --private \
                    --source=. \
                    --description="Thoughts repository for ${CLIENT_NAME} projects" \
                    --push || echo -e "${YELLOW}Failed to create/push to GitHub${NC}"
            fi
        fi
    fi
else
    echo -e "${GREEN}âœ“ Thoughts repository already exists: $THOUGHTS_REPO${NC}"
fi

echo ""
echo -e "${GREEN}âœ… Configuration added successfully!${NC}"
echo ""
echo "To start using it:"
echo ""
echo "  # Switch to this configuration"
echo "  hl-switch ${CLIENT_NAME}"
echo ""
echo "  # Initialize a project"
echo "  cd /path/to/${CLIENT_NAME}-project"
echo "  humanlayer thoughts init"
echo ""
echo "To switch back to personal:"
echo "  hl-switch coalesce-labs"
echo ""
